import argparse
import os
import platform
import re
import subprocess
from colored import fg,attr,Fore
import random
import requests as rq
import gzip

from tools import *
from web import WebAnalysis
from scan import auto_scan

ROCKYOU = "https://gitlab.com/kalilinux/packages/wordlists/-/raw/kali/master/rockyou.txt.gz"
HOME = os.path.expanduser('~')

params = {
    "pw_wl": "/usr/share/wordlists/rockyou.txt"
}

def rgbtoA(b,r,g):
    return(16 + 36 * r // 256 + 6 * g // 256 + b // 256)
    
if __name__ == '__main__':
    system = platform.system()
    if system!="Linux":
        err(f"{Fore.red}Platform Error:{attr(0)} This program is meant to be used on Linux only.")
    
    cl = Fore.rgb(random.randint(50,255), random.randint(50,255), random.randint(50,255))
    print(f'''{cl}  ___        _                        _           _ 
 / _ \      | |                      | |         | |
/ /_\ \_   _| |_ ___  _ __ ___   __ _| |_ ___  __| |
|  _  | | | | __/ _ \| '_ ` _ \ / _` | __/ _ \/ _` |
| | | | |_| | || (_) | | | | | | (_| | ||  __/ (_| |
\_| |_/\__,_|\__\___/|_| |_| |_|\__,_|\__\___|\__,_|
______          _            _   _                  
| ___ \        | |          | | (_)                 
| |_/ /__ _ __ | |_ ___  ___| |_ _ _ __   __ _      
|  __/ _ \ '_ \| __/ _ \/ __| __| | '_ \ / _` |     
| | |  __/ | | | ||  __/\__ \ |_| | | | | (_| |     
\_|  \___|_| |_|\__\___||___/\__|_|_| |_|\__, |     
 _____           _                        __/ |   
|_   _|         | |                      |___/        
  | | ___   ___ | |                                 
  | |/ _ \ / _ \| |                                 
  | | (_) | (_) | |                                 
  \_/\___/ \___/|_|         
   {attr(0)}''')

    parser = argparse.ArgumentParser(description='Automatic Pentesting Tool')
    parser.add_argument('host', type=str, help='host/ip adress')

    args = parser.parse_args()

    host=args.host
    bhost=host
    pattern = re.compile(r'https?://([^/]+)')
    match = pattern.match(bhost)
    if match:
        bhost=match.group(1)

    if not is_online(bhost):
        err(f"{Fore.red}Host Error:{attr(0)} Host is unreachable")

    ip = getip(bhost)
        
    if os.path.isfile(HOME+"/.config/autoptt.conf"):
        with open(HOME+"/.config/autoptt.conf") as f:
            for l in f.read().split("\n"):
                k=l.split(":")[0]
                v=l.split(k+":")[1]
                if k in params.keys():
                    params[k]=v
        print("Retrieved config from "+HOME+"/.config/autoptt.conf\n")

    if not os.path.isfile(params["pw_wl"]):
        print("The Default passwords wordlist can't be found.")
        print("Would you like to download Rockyou ? (Y/n)", end="")
        r=input(": ")
        if r.lower() in ["n","no","non"]:
            r="0"
            print("Path to your preferred passwords wordlist", end="")
            while not os.path.isfile(r):
                r=str(input(": "))
        else:
            print("   üì• Downloading Rockyou")

            if not os.path.isfile(HOME+"/wordlists/rockyou.txt"):
                ct=rq.get(ROCKYOU).content
                if isGz(ct):
                    print("   ‚öôÔ∏è Decompressing file")
                    ct=gzip.decompress(ct)
            
                with open(HOME+"/wordlists/rockyou.txt", "wb") as f:
                    f.write(ct)
            print("   ‚úÖ Wordlist downloaded\n")
            params["pw_wl"] = HOME+"/wordlists/rockyou.txt"
            writeConf(params)
            
        
    print(f"üöÄ Launching a full scan on {Fore.red}{bhost}{attr(0)}\n")

    print(f"üõú  Launching Ports analysis on {Fore.red}{ip}{attr(0)}")
    ps = auto_scan(ip, True)
    ports = ps.lite_Scanning()
    print("")

    if ("http" in ports.keys()) or ("https" in ports.keys()):
        wa = WebAnalysis(bhost, ( ports["http"] if "http" in ports.keys() else None ), ( ports["https"] if "https" in ports.keys() else None ))
        wa.start()

    if ("ftp" in ports.keys()):
        # verify anonymous user
        pass
