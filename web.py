import requests as rq
from colored import fg,attr,Fore

import pydb
from tools import *

class WebAnalysis:
    def __init__(self, host, http, https, wl=HOME+"/wordlists/dirb/common"):
        self.host=host
        self.http=http
        self.https=https
        self.wl=wl
        self.timeout = 5
        self.exts = ["php", "html", "sql", "txt", "zip", "rar"]
        self.codes = [200,204,301,302,307,401,403]

    def attack(self, url, wll):
        webbuster = pydb.Pybuster(url=url, wordfile=wll, exts=self.exts, codes=self.codes)
        webbuster.timeout = self.timeout
        r=webbuster.Run()
        return(r)

    def start(self):
        print("üåê Launching Web analysis on "+(f"{Fore.red}HTTP("+str(self.http)+f"){attr(0)} and {Fore.red}HTTPS("+str(self.https)+f"){attr(0)}" if (self.http and self.https) else f"{Fore.red}"+("HTTP("+str(self.http)+f")" if self.http else "HTTPS("+str(self.https)+f")")+f"{attr(0)}"  ))

        if checkcmd("gobuster"):
            print("Using Gobuster")
        else:
            print("Gobuster unavailable, using internal")

        if self.http!=None:
            r=self.attack("http://"+self.host+":"+str(self.http), self.wl)
        if self.https!=None:
            rr=self.attack("https://"+self.host+":"+str(self.https), self.wl)

        for rc in r:
            print(str(rc)+": "+str(len(r[rc])))

            
