import nmap, sys
try:    
    import nmapthon
    gobal_nmapthon = True
except ModuleNotFoundError:
    print("Nmapthon module not use with sudo rigth, heavy scanning unavailable")
    gobal_nmapthon = False

class auto_scan:
    def __init__(self,attack_IP,verbose=False):
        self.nm = nmap.PortScanner()
        self._attack_IP = attack_IP
        self._verbose = verbose
        self._scan_info = ""
        self._hostname = str(self._attack_IP)
        self._dict_lite_scan = {}
        self._dict_heavy_scan = {}
        
    def launch_lite_scan(self):
        return self.nm.scan(self._attack_IP, arguments="-v -sC -sT -sV")
    
    def get_os_Scan(self):
        scanner = nmapthon.NmapScanner(self._attack_IP, arguments="-O --osscan-guess")
        scanner.run()
        os = scanner.os_matches(self._attack_IP)

        for os_match, acc in os:
            print('         OS Match: {}\tAccuracy:{}%'.format(os_match, acc))
         

    def launch_heavy_scan(self):
        self.get_os_Scan()
        '''for os_match, acc in nmpthon.os_matches(self._attack_IP):
            print('OS Match: {}\tAccuracy:{}%'.format(os_match, acc))'''
    
    def get_scan_applied(self):
        return self.nm.command_line()

    def anaylse_nmap_scan(self, scan):
        self.parse_scan_protocols(self.nm[self._hostname].all_protocols())

    def parse_scan_protocols(self,all_protocols):
        for proto in all_protocols:
            lport = self.nm[self._hostname][proto].keys()
            for port in lport:
                service = self.nm[self._hostname][proto][port]['name']
                if self._verbose:
                    print("        {} running on {}".format(service, port))
                self._dict_lite_scan[service] = port

    def lite_Scanning(self):
        if self._verbose:
            print(">>> Launching lite Scanning")
        return_scan = self.launch_lite_scan()
        self.anaylse_nmap_scan(return_scan)
        self._scan_info = self.nm.all_hosts()[0]
        scan_done = self.get_scan_applied()
        if self._verbose:
            print(f"        Hostname scanned: {self._hostname}")
            print(f"        Scan applied: {scan_done}")
        return self._dict_lite_scan
    
    def heavy_Scanning(self):
        if self._verbose:
            print(">>> Launching heavy Scanning")
        self.launch_heavy_scan()
